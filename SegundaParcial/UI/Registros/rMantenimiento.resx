<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="GeneralErrorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3P/y1dz/8tXc//LV3P/y1dz/8tXc//LV3P/IpLPymHSb11pZ1O6Ojvb/j4/3/46O9v9WVtP/g4Pv/4+P
        9/+Pj/f/Zmbe9ElJzK6AgP8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/gIAEqH+Tucyo
        tvby1dz/8tXc//LV3P/y1dz/8tXc//LV3P/y1dz/8tXc//LV3P/EobX+oIGv/4+O9v+Pj/f/j4/3/4+P
        9/+Pj/f/j4/3/2Zm3vRLS82ugID/AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC/gIAEp32St8untfTy1dz/8tXc//LV3P/y1dz/8tXc//LV3P/y1dz/8tXc//LV3P/Ho7b/ooOv/4+O
        9v+Pj/f/j4/3/4+P9/9jY9vzSkrKpQAA/wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACqVaoDqH2StsqmtfTy1dz/8tXc//LV3P/y1dz/8tXc//LV3P/y1dz/8tXc//LV
        3P/HpLb/oYOv/4+O9v+Pj/f/Zmbd9UxMzK+AgP8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIACqoCUrsuntPPy1dz/8tXc//LV3P/y1dz/8tXc//LV
        3P/y1dz/8tXc//LV3P/Hpbf/oYOv/2hn3fVKSsywgID/AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIACqX6UrsijsvTy1dz/8tXc//LV
        3P/y1dz/8tXc//LV3P/y1dz/8tXc//LV3P/HpLb+l3OZ7qqAlZyrgJXOqH6T4KqAk8upfpN/onSLFgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AP8BqX+SocOe
        rvLy1dz/8tXc//LV3P/y1dz/8tXc//LV3P/y1dz/48TN/7OLnv+3kaL+2rnD/+vN1f/y1dz/6MrT/9Ov
        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
</value>
  </data>
</root>